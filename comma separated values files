Contents of a csv file

name,hw1,hw2,midterm,final
Petr Little,9,8,85,78
Sam Tarley,10,10,99,100
Joff King,4,2,55,61

  --------------------

  import csv

with open('grades.csv', 'r') as csvfile:
    grades_reader = csv.reader(csvfile, delimiter=',')

    row_num = 1
    for row in grades_reader:
        print('Row #{}:'.format(row_num), row)
        row_num += 1


  expect result :
Row #1: ['name', 'hw1', 'hw2', 'midterm', 'final']
Row #2: ['Petr Little', '9', '8', '85', '78']
Row #3: ['Sam Tarley', '10', '10', '99', '100']
Row #4: ['Joff King', '4', '2', '55', '61']



  ---------------------------------------


  import csv

# Dictionary that maps student names to a list of scores
grades = {}

# Use with statement to guarantee file closure
with open('grades.csv', 'r') as csvfile:
    grades_reader = csv.reader(csvfile, delimiter=',')

    first_row = True
    for row in grades_reader:
        # Skip the first row with column names
        if first_row:
            first_row = False
            continue

        ## Calculate final student grade ##

        name = row[0]

        # Convert score strings into floats
        scores = [float(cell) for cell in row[1:]]

        hw1_weighted = scores[0]/10 * 0.05
        hw2_weighted = scores[1]/10 * 0.05
        mid_weighted = scores[2]/100 * 0.40
        fin_weighted = scores[3]/100 * 0.50

        grades[name] = (hw1_weighted + hw2_weighted + 
                        mid_weighted + fin_weighted) * 100

for student, score in grades.items():
    print('{} earned {:.1f}%'.format(student, score))


expect output :

Petr Little earned 81.5%
Sam Tarley earned 99.6%
Joff King earned 55.5%


-------------------------------------------------------


import csv

row1 = ['100', '50', '29']
row2 = ['76', '32', '330']

with open('gradeswr.csv', 'w') as csvfile:
    grades_writer = csv.writer(csvfile)

    grades_writer.writerow(row1)
    grades_writer.writerow(row2)

    grades_writer.writerows([row1, row2])



  expect output :
100,50,29
76,32,330
100,50,29
76,32,330

------------------------------------------------------------------------

this is input1 files

hello	cat	man	hey	dog	boy	Hello	man	cat	woman	dog	Cat	hey	boy





import csv

# Step 1: Input file name
file_name = input().strip()  # Input the file name, e.g., 'input1.csv'

# Step 2: Open the file and read all words
words = []
try:
    with open(file_name, 'r') as csv_file:
        reader = csv.reader(csv_file)
        for row in reader:
            for word in row:  # Directly access each word from the row
                words.append(word.strip())  # Strip any whitespace
except FileNotFoundError:
    print(f"Error: File '{file_name}' not found.")
    exit()

# Step 3: Count word frequencies while preserving order
word_freq = {}
for word in words:
    if word in word_freq:
        word_freq[word] += 1
    else:
        word_freq[word] = 1

# Step 4: Print results in the order of appearance
for word, freq in word_freq.items():
    print(word, freq)

---------------------------------------------------


# Step 1: Input file name
input_file = input("Enter file name: ").strip()

# Step 2: Initialize an empty dictionary
tv_shows_dict = {}

# Step 3: Read the file and process data
with open(input_file, 'r') as file:
    lines = file.readlines()
    for i in range(0, len(lines), 2):  # Process every two lines
        seasons = int(lines[i].strip())  # Extract the number of seasons
        show = lines[i + 1].strip()      # Extract the TV show title

        # Add to the dictionary
        if seasons in tv_shows_dict:
            tv_shows_dict[seasons].append(show)  # Append show (preserve order)
        else:
            tv_shows_dict[seasons] = [show]

# Step 4: Write to output_keys.txt (sort by keys, but not shows)
with open('output_keys.txt', 'w') as file_keys:
    for seasons in sorted(tv_shows_dict.keys()):  # Sort only by keys
        shows = "; ".join(tv_shows_dict[seasons])  # Keep original order of shows
        file_keys.write(f"{seasons}: {shows}\n")

# Step 5: Collect all TV shows, keep original order, and write to output_titles.txt
all_shows = []
for seasons in sorted(tv_shows_dict.keys()):  # Process keys in order
    all_shows.extend(tv_shows_dict[seasons])  # Add shows as they appear

with open('output_titles.txt', 'w') as file_titles:
    for show in all_shows:  # Write shows in their original order
        file_titles.write(show + "\n")








