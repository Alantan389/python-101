count loop.  
### 


##### calculate the total negative number when input is 0
# Initialize count variable
count = 0

# Get the first input from the user
val = int(input("Enter a number (0 to stop): "))

# Loop until the user enters 0
while val != 0:
    # Check if the input value is negative
    if val < 0:
        count += 1  # Increment the counter for negative numbers
    
    # Get the next input
    val = int(input("Enter a number (it will not stop until input 0): "))

# Print the total count of negative numbers
print("Total number of negative values entered:", count)






##### calculate the max number when input is 0
# Initialize max to a value lower than any possible positive input
max = -1

# Get the first input
val = int(input("Enter a positive number (enter 0 when done): "))

while val != 0:
    # (A) Check if the current value is greater than max
    if val > max:
        # (B) Update max if it is
        max = val

    # Get the next input
    val = int(input("Enter next number (enter 0 when done): "))

print("The maximum value is:", max)


-----------------------------------------------------------
Write a while loop that prints user_num divided by 2 until user_num is less than 1. The value of user_num changes inside of the loop.

Sample output with input: 20
10.0
5.0
2.5
1.25
0.625


Note: If the submitted code has an infinite loop, 
the system will stop running the code after a few seconds and r
eport "Program end never reached.
" The system doesn't print the test case that caused the reported message.

code : 

user_num = int(input())

''' Your solution goes here '''

while user_num >= 1:
    
    value=user_num/2 
    print(value)
    user_num=value
--------------------------------------------------------------------

The following is an example of using a loop to compute a mathematical quantity. The program computes the greatest common divisor (GCD) among two user-entered integers num_a and num_b, using Euclid's algorithm: If num_a > num_b, set num_a to num_a - num_b, else set num_b to num_b - num_a. 
Repeat until num_a equals num_b, at which point num_a and num_b both equal the GCD.

num_a = int(input('Enter first positive integer: '))
print()

num_b = int(input('Enter second positive integer: '))
print()

while num_a != num_b:
    if num_a > num_b:
        num_a = num_a - num_b
    else:
        num_b = num_b - num_a

print('GCD is {}'.format(num_a))
---------------------------------------------------------------------------
whilp loop

Write an expression that continues to bid until the user enters 'n'.

Sample output with inputs: 'y' 'y' 'n'
I'll bid $7!
Continue bidding? I'll bid $15!
Continue bidding? I'll bid $23!
Continue bidding?



import random
random.seed(5)

keep_going = '-'
next_bid = 0

while keep_going.lower() !='n':
   next_bid = next_bid + random.randint(1, 10)
   print('I\'ll bid ${}!'.format(next_bid))
   print('Continue bidding?', end=' ')
   keep_going = input()

-------------------------------------------------------------------


