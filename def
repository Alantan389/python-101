
 function's statements may include function calls, 
known as hierarchical function calls or nested function calls. 
Code such as user_input = int(input()) consists of such a hierarchical function call, wherein the input()
function is called and evaluates to a value that is then passed as an argument to the int() function.



def function 

def calc_circle_area(circle_diameter):
    pi_val=3.1415
    
    circle_radius=circle_diameter / 2.0
    circle_area = pi_val * circle_radius * circle_radius
    return circle_area

def calc_pizza_calories(pizza_diameter):
    calories_per_square_inch=16.7
    total_calories =calc_circle_area(pizza_diameter)*calories_per_square_inch
    return total_calories

print (calc_pizza_calories(12.0))
print (calc_pizza_calories(14.0))


-___________________________________________________________________________________

calculating step and calories consuming 

def steps_to_feet(num_steps):
    feet_per_step = 3
    feet = num_steps * feet_per_step
    return feet

def steps_to_calories(num_steps):
    steps_per_minute = 70.0
    calories_per_minute_walking = 3.5

    minutes = num_steps / steps_per_minute
    calories = minutes * calories_per_minute_walking
    return calories

steps = int(input('Enter number of steps walked: '))

feet = steps_to_feet(steps)
print('Feet:', feet)

calories = steps_to_calories(steps)
print('Calories:', calories)



(here is the code without define function. )**********
feet_per_step = 3
steps_per_minute = 70.0
calories_per_minute_walking = 3.5

steps = int(input('Enter number of steps walked: '))

feet = steps * feet_per_step
print('Feet:', feet)

minutes = steps / steps_per_minute
calories = minutes * calories_per_minute_walking
print('Calories:', calories)




